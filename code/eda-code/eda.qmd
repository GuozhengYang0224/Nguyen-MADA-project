---
title: "Exploratory Data Analysis"
date: "2025-02-21"
output: html_document
---

This Quarto file loads the cleaned data and does some exploring.
# Setup

```{r}
#load needed packages. make sure they are installed
library(here) 
library(dplyr)
library(skimr)
library(ggplot2)
library(zoo)
library(tidyr)
library(tigris)
library(sf)
```

Load the data from processingfile-v1 file.

```{r}

# processed data
processeddata <- readRDS(here("data", "processed-data", "processeddata.rds"))

processeddata <- processeddata %>%
   mutate(incidence_rate = if_else(incidence_rate < 0, 0, incidence_rate))
```

Creation of a heatmap showing total COVID 19 cases on the last observed date, 10/15/2022. I also created a heat map showing mobility changes, with hotter indicating more mobility to retail and recreational spots. Interestingly, the two maps seem to correlate even though I used total COVID-19 cases rather than new ones.

```{r}
# load GA shapefile
ga_counties <- counties(state = "GA", cb = TRUE, class = "sf")

ga_counties <- ga_counties %>%
  mutate(NAME = tolower(NAME))

ga_map_data <- ga_counties %>%
  left_join(processeddata, by = c("NAME" = "county"))

ga_health <- processeddata %>%
  group_by(county) %>%
  summarize(
    health_outcome = mean(health_outcome_rank, na.rm = TRUE), 
    population = first(population_count)  
  ) %>%
  ungroup()

ga_health_map_data <- ga_counties %>%
  left_join(ga_health, by = c("NAME" = "county"))

ranking_map <- ggplot(ga_health_map_data) +
  geom_sf(aes(fill = health_outcome), color = "black") +  
  scale_fill_viridis_c(option = "inferno", na.value = "grey") +  
  theme_minimal() + 
  labs(title = 
         "Map of Georgia Counties Colored by Average Health Outcome Rankings (2020-2022) ",
       fill = "Health Outcome Rank (Lower is better)") +
  theme(legend.position = "right")

print(ranking_map)
```

```{r}

top_10_counties <- processeddata %>%
  group_by(county) %>%
  filter(year == 2022) %>%
  summarise(cases = max(new_cases, na.rm = TRUE)) %>%
  arrange(desc(new_cases)) %>%
  slice_head(n = 10) %>%
  pull(county)

# Filter the original data to only include the top 10 counties
filtered_data <- processeddata %>%
  filter(county %in% top_10_counties)

ggplot(processeddata, aes(x = week(date), y = county, fill = incidence_rate)) +
  geom_tile(color = "white") +  # Grid-like separation
  scale_fill_viridis_c(option = "plasma", na.value = "grey", 
                       breaks = c(1, 3, 5, 10), 
                       labels = c("<1", "<3", "<5", "â‰¥10")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()) +
  labs(title = "Average Weekly Incidence per 100,000",
       x = "Year", y = "State", fill = "Incidence Rate")
```

This graph charts prevalence of COVID-19 in 2022 against a County's Health Outcome Rank. One severe outlier was removed for the graph's clarity. Regardless, from this scatter plot, it seems a county's health outcome ranking is not indicative of their prevention of COVID-19 cases. This could be the result of population density in counties of greater ranking. After graphing population count against a 

```{r}
health_ranking_cases <- processeddata %>%
  filter(lubridate::year(date) == 2021) %>%
  group_by(county) %>%
  summarize(
    total_cases_2022 = sum(new_cases, na.rm = TRUE),
    health_factor_rank = first(health_factor_rank),
    density = first(pop_density),
    population_count = first(population_count)
  ) %>%
  ungroup() %>%
  mutate(prevalence = total_cases_2022 / population_count)

health_incidence_scatter <- ggplot(health_ranking_cases, aes(x = health_factor_rank, y = prevalence )) +
  geom_point(alpha = 0.5, color = "blue") + theme_minimal() +
  scale_x_reverse() +
  coord_cartesian(ylim = c(0, 0.2)) +
  labs(title = "Prevalence of COVID-19 in 2022 vs Health Factor Rank", x = "Health Factor Rank",
       y= "Prevalence Rate")

print(health_incidence_scatter)


# Include larger values
ranking_population_scatter_1 <- ggplot(health_ranking_cases, aes(x = health_factor_rank, y = density)) +
  geom_point(alpha = 0.5, color = "red") + theme_minimal()+
  scale_x_reverse() +
  scale_y_continuous(labels = comma) +
  labs(title = "Health Factor Rank vs Population Density (per km2) in 2022", x = "Health Factor Rank", 
       y = "Density")

print(ranking_population_scatter_1)


prevalence_density_scatter <- ggplot(health_ranking_cases, aes(x = density, y = prevalence)) +
  geom_point(alpha = 0.5, color = "red") + theme_minimal()+
  scale_y_continuous(labels = comma) +
  labs(title = "Population Density (per km2) vs COVID-19 Prevalence in 2022", 
       x = "Density (Persons per km2)", 
       y = "Prevalence")

print(prevalence_density_scatter)
```

```{r}
ga_case_count <- processeddata %>%
  group_by(date) %>%
  summarise(ga_total_cases = sum(new_cases, na.rm = TRUE))

ga_cases_graph <- ggplot(ga_case_count, aes(x = date)) +
  geom_line(aes(y = ga_total_cases), color = "blue") +
  labs(title = "Case Count per Day in Georgia",
       x= "Date",
       y = "Case Count") + theme_minimal()

print(ga_cases_graph)

```
I aim to plot out the changes in mobility for each category as time progresses. Originally, it plotted out everyday, however, the line was far too jagged so I applied a weekly rolling average instead. I also had to create a dataframe to average values for a given day for every location.
```{r}

# Create dataframe of average mobility for everywhere in the US per date
ga_average_mobility <- processeddata %>%
  group_by(date) %>%
  summarise(
    total_mobility_changes = mean(average_mobility, na.rm = TRUE),
    transit_mean = mean(transit_stations_percent_change_from_baseline, na.rm = TRUE),
    parks_mean = mean(parks_percent_change_from_baseline, na.rm = TRUE),
    retail_mean = mean(retail_and_recreation_percent_change_from_baseline, na.rm = TRUE),
    grocery_mean = mean(grocery_and_pharmacy_percent_change_from_baseline, na.rm = TRUE),
    workplaces_mean = mean(workplaces_percent_change_from_baseline, na.rm = TRUE),
    residential_mean = mean(residential_percent_change_from_baseline, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  arrange(date) %>%  # Ensure dates are sorted
  mutate(
    transit_mean_7day = rollmean(transit_mean, k = 7, fill = NA, align = "right"),
    parks_mean_7day = rollmean(parks_mean, k = 7, fill = NA, align = "right"),
    retail_mean_7day = rollmean(retail_mean, k = 7, fill = NA, align = "right"),
    grocery_mean_7day = rollmean(grocery_mean, k = 7, fill = NA, align = "right"),
    workplaces_mean_7day = rollmean(workplaces_mean, k = 7, fill = NA, align = "right"),
    residential_mean_7day = rollmean(residential_mean, k = 7, fill = NA, align = "right")
  )

# Plot the 7-day averages for each mobility type
mobility_graph <- ggplot(ga_average_mobility, aes(x = date)) +
  geom_line(aes(y = grocery_mean_7day, color = "Grocery & Pharmacy")) +
  geom_line(aes(y = transit_mean_7day, color = "Transit Stations")) +
  geom_line(aes(y = workplaces_mean_7day, color = "Workplaces")) +
  geom_line(aes(y = residential_mean_7day, color = "Residential")) +
  geom_line(aes(y = parks_mean_7day, color = "Recreational")) +
  labs(
    title = "7-Day Moving Average of Percent Change in Mobility in Georgia Over Time",
    x = "Date",
    y = "7-Day Average of Percent Change in Mobility",
    color = "Mobility Type"
  ) +
  theme_minimal()

print(mobility_graph)

# save graph
figure_file = here("results","figures","mobilitygraph.png")
ggsave(filename = figure_file, plot=mobility_graph)
```
