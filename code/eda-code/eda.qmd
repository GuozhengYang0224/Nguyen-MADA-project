---
title: "Exploratory Data Analysis"
date: "2025-02-21"
output: html_document
---

This Quarto file loads the cleaned data and does some exploring.
# Setup

```{r}
#load needed packages. make sure they are installed
library(here) 
library(dplyr)
library(skimr)
library(ggplot2)
library(zoo)
library(tidyr)
library(tigris)
library(sf)
```

Load the data from processingfile-v1 file.

```{r}

# processed data
processeddata <- readRDS(here("data", "processed-data", "processeddata.rds"))

```

Creation of a heatmap showing total COVID 19 cases on the last observed date, 10/15/2022. I also created a heat map showing mobility changes, with hotter indicating more mobility to retail and recreational spots. Interestingly, the two maps seem to correlate even though I used total COVID-19 cases rather than new ones.
```{r}
# Load the state-level shapefile 
us_map_states <- tigris::states(cb = TRUE) %>%
  st_as_sf()  # Convert the shapefile to a Simple Feature object

# Clean the state names in the shapefile
us_map_clean <- us_map_states %>%
  mutate(NAME = tolower(NAME))  # Convert state abbreviation to lowercase

# Filter your dataset to get data for the last recorded day and group by state
last_day <- max(processeddata$date)
data_last_day <- processeddata %>%
  filter(date == last_day) %>%
  group_by(state) %>%
  summarise(total_cases = sum(total_cases, na.rm = TRUE),  # Sum of total cases
            retail_and_recreation_percent_change_from_baseline = 
              mean(retail_and_recreation_percent_change_from_baseline, na.rm = TRUE)) %>%  # Average mobiltiy changes
  mutate(state = tolower(state))  # Convert state names to lowercase

# Join the shapefile with the COVID-19 data
us_map_data <- us_map_clean %>%
  left_join(data_last_day, by = c("NAME" = "state"))


# plot total COVID-19 cases to USA map on 10/15/2022
cases_map <- ggplot(us_map_data) +
  geom_sf(aes(fill = total_cases), color = "white") +
  scale_fill_viridis_c(option = "plasma", trans = "log", labels = NULL) + 
  labs(title = paste("Heatmap of Total COVID-19 Cases in the U.S. on", last_day),
       fill = "Hotter = More Cases") +
  theme_minimal() +
  coord_sf(xlim = c(-125, -65), ylim = c(25, 50))

print(cases_map)

figure_file = here("results","figures","casemap.png")
ggsave(filename = figure_file, plot=cases_map)


# Create the heatmap for retail and recreation mobility changes
mobility_map <- ggplot(us_map_data) +
  geom_sf(aes(fill = retail_and_recreation_percent_change_from_baseline), color = "white") +  
  scale_fill_viridis_c(option = "inferno", trans = "identity") +
  labs(title = paste("Heatmap of Retail and Recreation Mobility Changes in the U.S. on", last_day),
       fill = "Mobility Change") +
  theme_minimal() +
  theme(
        legend.spacing.y = unit(1, "cm"),  
        legend.box.spacing = unit(1, "cm"),  
        legend.key.size = unit(1, "cm")) +  
  coord_sf(xlim = c(-125, -65), ylim = c(25, 50))  

print(mobility_graph)

# save graph
figure_file = here("results","figures","mobilitymap.png")
ggsave(filename = figure_file, plot=mobility_map)
```

This graph aims to plot total cases overtime for every location on a given day. This required the creation of a dataframe to store the sum of all total cases.
```{r}
# Create new data frame to have cases per day instead of state/county
total_cases_df <- processeddata %>%
  group_by(date) %>%
  summarise(Cases = sum(total_cases, na.rm = TRUE)) %>%
  ungroup()

# Plot the total case counts over time
case_count_graph <- ggplot(total_cases_df, aes(x = date, y = Cases)) +
  geom_line(color = "blue") +
  scale_y_continuous(labels = function(x) format(x, big.mark = ",", scientific = FALSE)) +  
  labs(title = "Total COVID-19 Cases Over Time in the U.S.",
       x = "Date",
       y = "Total Cases") +
  theme_minimal()

print(case_count_graph)

# save graph
figure_file = here("results","figures","casecountplot.png")
ggsave(filename = figure_file, plot=case_count_graph)
```
This graph aims to plot new cases overtime for every location on a given day. This required the creation of a dataframe to store the sum of all new cases.
```{r}
# data frame to sum all cases on a given day for every location
new_cases_df <- processeddata %>%
  group_by(date) %>%
  summarise(Cases = sum(new_cases, na.rm = TRUE)) %>%
  ungroup()

# Plot the new cases over time
incidence_graph <- ggplot(new_cases_df, aes(x = date, y = Cases)) +
  geom_line(color = "red") + 
  scale_y_continuous(labels = function(x) format(x, big.mark = ",", scientific = FALSE)) +
  labs(title = "Daily New COVID-19 Cases Over Time in the U.S.",
       x = "Date",
       y = "New Cases per Day") +
  theme_minimal()

print(incidence_graph)

# save graph
figure_file = here("results","figures","incidenceplot.png")
ggsave(filename = figure_file, plot=incidence_graph)

```
I aim to plot out the changes in mobility for each category as time progresses. Originally, it plotted out everyday, however, the line was far too jagged so I applied a weekly rolling average instead. I also had to create a dataframe to average values for a given day for every location.
```{r}

# Create dataframe of average mobility for everywhere in the US per date
us_average_mobility <- processeddata %>%
  group_by(date) %>%
  summarise(
    total_mobility_changes = mean(average_mobility, na.rm = TRUE),
    transit_mean = mean(transit_stations_percent_change_from_baseline, na.rm = TRUE),
    parks_mean = mean(parks_percent_change_from_baseline, na.rm = TRUE),
    retail_mean = mean(retail_and_recreation_percent_change_from_baseline, na.rm = TRUE),
    grocery_mean = mean(grocery_and_pharmacy_percent_change_from_baseline, na.rm = TRUE),
    workplaces_mean = mean(workplaces_percent_change_from_baseline, na.rm = TRUE),
    residential_mean = mean(residential_percent_change_from_baseline, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  arrange(date) %>%  # Ensure dates are sorted
  mutate(
    transit_mean_7day = rollmean(transit_mean, k = 7, fill = NA, align = "right"),
    parks_mean_7day = rollmean(parks_mean, k = 7, fill = NA, align = "right"),
    retail_mean_7day = rollmean(retail_mean, k = 7, fill = NA, align = "right"),
    grocery_mean_7day = rollmean(grocery_mean, k = 7, fill = NA, align = "right"),
    workplaces_mean_7day = rollmean(workplaces_mean, k = 7, fill = NA, align = "right"),
    residential_mean_7day = rollmean(residential_mean, k = 7, fill = NA, align = "right")
  )

# Plot the 7-day averages for each mobility type
mobility_graph <- ggplot(us_average_mobility, aes(x = date)) +
  geom_line(aes(y = grocery_mean_7day, color = "Grocery & Pharmacy")) +
  geom_line(aes(y = transit_mean_7day, color = "Transit Stations")) +
  geom_line(aes(y = workplaces_mean_7day, color = "Workplaces")) +
  geom_line(aes(y = residential_mean_7day, color = "Residential")) +
  geom_line(aes(y = parks_mean_7day, color = "Recreational")) +
  labs(
    title = "7-Day Moving Average of Percent Change in Mobility in the U.S. Over Time",
    x = "Date",
    y = "7-Day Average of Percent Change in Mobility",
    color = "Mobility Type"
  ) +
  theme_minimal()

print(mobility_graph)

# save graph
figure_file = here("results","figures","mobilitygraph.png")
ggsave(filename = figure_file, plot=mobility_graph)
```
